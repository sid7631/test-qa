{
  "stats": {
    "suites": 2,
    "tests": 13,
    "passes": 12,
    "pending": 0,
    "failures": 1,
    "start": "2022-02-22T01:52:52.908Z",
    "end": "2022-02-22T01:54:18.530Z",
    "duration": 85622,
    "testsRegistered": 13,
    "passPercent": 92.3076923076923,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2c20a2fd-b6c7-4652-999e-88ef01f8948d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
          "title": "List Users",
          "fullFile": "/Users/sid/Desktop/test_qa/test/ListUsers.test.js",
          "file": "/test/ListUsers.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"List Users\"",
              "fullTitle": "List Users \"before all\" hook in \"List Users\"",
              "timedOut": false,
              "duration": 6361,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "page = new Page();\ndriver = page.driver;\nawait page.visit('http://localhost:3000');",
              "err": {},
              "uuid": "9db4f6dd-1ce1-4eac-a5dd-d8ad81f12d66",
              "parentUUID": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"List Users\"",
              "fullTitle": "List Users \"after all\" hook in \"List Users\"",
              "timedOut": false,
              "duration": 63,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await page.quit();",
              "err": {},
              "uuid": "c06063c1-fc6d-4cff-a752-aa86ff9a0511",
              "parentUUID": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "The users list can have multiple users",
              "fullTitle": "List Users The users list can have multiple users",
              "timedOut": false,
              "duration": 8905,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await page.AddUniqueUser()\nawait page.AddUniqueUser()\nawait page.AddUniqueUser()\nawait driver.sleep(1000)\nconst username1 = await page.GetTableRow(0,'name')\nconst username2 = await page.GetTableRow(1,'name')\nconst username3 = await page.GetTableRow(2,'name')\nexpect(username1).to.have.lengthOf.greaterThan(0)\nexpect(username2).to.have.lengthOf.greaterThan(0)\nexpect(username3).to.have.lengthOf.greaterThan(0)",
              "err": {},
              "uuid": "35dd6345-f0dd-49f4-aaa2-ee78c8d1be37",
              "parentUUID": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Table field ID",
              "fullTitle": "List Users Table field ID",
              "timedOut": false,
              "duration": 10388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let idValue1, idValue2\nconst headerField = 'id'\nawait page.navigate(user_list_url)\nawait driver.sleep(2000)\nawait page.HeaderAction(headerField,'asc')\nawait driver.sleep(1000)\nidValue1 = await page.GetTableRow(0,headerField)\nidValue2 = await page.GetTableRow(1,headerField)\nexpect(parseInt(idValue1)).to.be.lessThan(parseInt(idValue2))\nawait page.HeaderAction(headerField,'desc')\nawait driver.sleep(1000)\nidValue1 = await page.GetTableRow(0,headerField)\nidValue2 = await page.GetTableRow(1,headerField)\nexpect(parseInt(idValue1)).to.be.greaterThan(parseInt(idValue2))\nawait page.HeaderAction(headerField,'filter')\nawait driver.sleep(1000)\nconst filterField = await page.findByXpath(\"//input[@placeholder='Filter value']\")\npage.write(filterField,idValue2)\nawait driver.sleep(3000)\n\nconst postfilterField = await page.findByXpath(\"//div[@role='cell' and @data-field='\"+headerField+\"']\")\nconst postFilterValue = await postfilterField.getText()\nexpect(postFilterValue).to.be.equal(idValue2)",
              "err": {},
              "uuid": "767d9812-a426-4a02-a53a-ae8f57a528bb",
              "parentUUID": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Name field ID",
              "fullTitle": "List Users Name field ID",
              "timedOut": false,
              "duration": 6607,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet result = []\nconst headerField = 'name'\nresult = await page.HeaderActionTest(headerField)\nexpect(result[0]).to.be.equal(result[1])",
              "err": {},
              "uuid": "72ecc242-b88a-473a-b35f-55e5483bb7b7",
              "parentUUID": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Username field ID",
              "fullTitle": "List Users Username field ID",
              "timedOut": false,
              "duration": 6931,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet result = []\nconst headerField = 'username'\nresult = await page.HeaderActionTest(headerField)\nexpect(result[0]).to.be.equal(result[1])",
              "err": {},
              "uuid": "28424a20-2f75-4e14-99db-981740d3f494",
              "parentUUID": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Email field ID",
              "fullTitle": "List Users Email field ID",
              "timedOut": false,
              "duration": 6649,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet result = []\nconst headerField = 'email'\nresult = await page.HeaderActionTest(headerField)\nexpect(result[0]).to.be.equal(result[1])",
              "err": {},
              "uuid": "1f758491-6155-4385-81cc-ebdce0297070",
              "parentUUID": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Phone field ID",
              "fullTitle": "List Users Phone field ID",
              "timedOut": false,
              "duration": 7025,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000)\nlet result = []\nconst headerField = 'phone'\nresult = await page.HeaderActionTest(headerField)\nexpect(result[0]).to.be.equal(result[1])",
              "err": {},
              "uuid": "61cdb404-6c54-43ea-ae2b-1ec2d84b0fd2",
              "parentUUID": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Edited",
              "fullTitle": "List Users User Edited",
              "timedOut": false,
              "duration": 4374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await page.navigate(user_list_url)\nawait driver.sleep(1000)\nconst firstRow = await page.findByXpath('//div[@data-rowindex=\"0\"]')\nconst phoneField = await firstRow.findElement(By.xpath(\"./child::div[@data-field='phone']\"))\nconst phoneValue = await phoneField.getText()\nconst child = await firstRow.findElement(By.xpath(\"./child::div[@data-field='actions']\"))\nconst removeButton = await child.findElement(By.xpath(\"./child::button/*[contains(text(), 'Edit')]\"))\nawait removeButton.click()\nawait driver.sleep(1000)\nconst phone =  await page.findByName('phone')\nawait page.write(phone, 1)\nconst UpdateUser = await page.findByXpath('//button/*[contains(text(), \"Update User\")]')\nUpdateUser.click()\nawait page.HeaderAction('phone','filter')\nconst filterField = await page.findByXpath(\"//input[@placeholder='Filter value']\")\npage.write(filterField,phoneValue+1)\nawait driver.sleep(1000)\nconst firstRow2 = await page.findByXpath('//div[@data-rowindex=\"0\"]')\nconst phoneField2 = await firstRow2.findElement(By.xpath(\"./child::div[@data-field='phone']\"))\nconst phone2Value = await phoneField2.getText()\nexpect(phoneValue+'1').to.be.equal(phone2Value)",
              "err": {},
              "uuid": "da65648f-a161-4a0c-a722-52e838f281b7",
              "parentUUID": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Removed",
              "fullTitle": "List Users User Removed",
              "timedOut": false,
              "duration": 8369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await page.navigate(user_list_url)\nawait driver.sleep(1000)\nconst firstRow = await page.findByXpath('//div[@data-rowindex=\"0\"]')\nconst child = await firstRow.findElement(By.xpath(\"./child::div[@data-field='actions']\"))\nconst removeButton = await child.findElement(By.xpath(\"./child::button/*[contains(text(), 'Remove')]\"))\nawait removeButton.click()\nawait driver.sleep(5000)\n\nconst isElementPresent = await page.isElementPresent('//div[@data-rowindex=\"0\"]')\nexpect(isElementPresent).to.be.false",
              "err": {},
              "uuid": "3c47eca4-7bbc-480c-a1ef-8d45da042f52",
              "parentUUID": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Rows per page",
              "fullTitle": "List Users Rows per page",
              "timedOut": false,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await page.navigate(user_list_url)\nconst rowPerPageButton = await page.findByXpath(\"//div[@role='button' and contains(@class,'MuiTablePagination-select')]\")\nawait page.click(rowPerPageButton)\nconst rowPerPageMenu = await page.findByXpath(\"//ul[@role='listbox']/li[@role='option' and @aria-selected='false']\")\nawait page.click(rowPerPageMenu)",
              "err": {},
              "uuid": "9c68e60f-cce1-442b-9367-b3b458ae1737",
              "parentUUID": "e326fce0-2ddd-4ccc-9ec3-cdfb61772096",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35dd6345-f0dd-49f4-aaa2-ee78c8d1be37",
            "767d9812-a426-4a02-a53a-ae8f57a528bb",
            "72ecc242-b88a-473a-b35f-55e5483bb7b7",
            "28424a20-2f75-4e14-99db-981740d3f494",
            "1f758491-6155-4385-81cc-ebdce0297070",
            "61cdb404-6c54-43ea-ae2b-1ec2d84b0fd2",
            "da65648f-a161-4a0c-a722-52e838f281b7",
            "3c47eca4-7bbc-480c-a1ef-8d45da042f52",
            "9c68e60f-cce1-442b-9367-b3b458ae1737"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 59557,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "42ec4f63-5557-431f-b41c-254bb3338509",
          "title": "User Creation",
          "fullFile": "/Users/sid/Desktop/test_qa/test/UsersCreation.test.js",
          "file": "/test/UsersCreation.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"User Creation\"",
              "fullTitle": "User Creation \"before all\" hook in \"User Creation\"",
              "timedOut": false,
              "duration": 4119,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "page = new Page();\ndriver = page.driver;\nawait page.visit('http://localhost:3000');",
              "err": {},
              "uuid": "11667f1e-f8c5-48b2-bb4d-a5425967c746",
              "parentUUID": "42ec4f63-5557-431f-b41c-254bb3338509",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User Creation\"",
              "fullTitle": "User Creation \"after all\" hook in \"User Creation\"",
              "timedOut": false,
              "duration": 53,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await page.quit();",
              "err": {},
              "uuid": "256b8a67-e07c-4f6c-a656-5a8e534bed7d",
              "parentUUID": "42ec4f63-5557-431f-b41c-254bb3338509",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "A new User with the following information can be added: name, phone number, username and email from a simple form",
              "fullTitle": "User Creation A new User with the following information can be added: name, phone number, username and email from a simple form",
              "timedOut": false,
              "duration": 4606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//add new User\n                user = await page.AddUniqueUser()",
              "err": {},
              "uuid": "f1fc9149-a26e-471e-a29a-3d2cac7bc302",
              "parentUUID": "42ec4f63-5557-431f-b41c-254bb3338509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "New created users will be displayed in the users list",
              "fullTitle": "User Creation New created users will be displayed in the users list",
              "timedOut": false,
              "duration": 2944,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//filter by username of added user\n                await page.HeaderAction('username','filter')\n                const filterField = await page.findByXpath(\"//input[@placeholder='Filter value']\")\n                page.write(filterField,user.username)\n                await driver.sleep(1000)\n                //verify user is added\n                const username = await page.GetTableRow(0,'username')\n                expect(username).to.be.equal(user.username)",
              "err": {},
              "uuid": "4c07b773-bc1a-4fb7-ab77-ae62674e6278",
              "parentUUID": "42ec4f63-5557-431f-b41c-254bb3338509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Users are unique",
              "fullTitle": "User Creation Users are unique",
              "timedOut": false,
              "duration": 3526,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//add duplicate users\n                user = await page.AddDuplicateUser()\n                //filter by username to added user\n                await page.HeaderAction('username','filter')\n                const filterField = await page.findByXpath(\"//input[@placeholder='Filter value']\")\n                page.write(filterField,user.username)\n                await driver.sleep(1000)\n                //second entry of user should not be added to the userlist\n                const isElementPresent = await page.isElementPresent('//div[@data-rowindex=\"1\"]')\n                expect(isElementPresent).to.be.false",
              "err": {
                "message": "AssertionError: expected true to be false",
                "estack": "AssertionError: expected true to be false\n    at Context.<anonymous> (test/UsersCreation.test.js:68:47)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)",
                "diff": "- true\n+ false\n"
              },
              "uuid": "118148d2-b784-4307-9b60-61a197cd4513",
              "parentUUID": "42ec4f63-5557-431f-b41c-254bb3338509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cancel Add User",
              "fullTitle": "User Creation Cancel Add User",
              "timedOut": false,
              "duration": 4366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//enter user details and click on cancel button\n                user = await page.CancelAddUser()\n                //filter by username of user details entered\n                await page.HeaderAction('username','filter')\n                const filterField = await page.findByXpath(\"//input[@placeholder='Filter value']\")\n                page.write(filterField,user.username)\n                await driver.sleep(1000)\n                //entry of user should not be added to the userlist\n                const isElementPresent = await page.isElementPresent('//div[@data-rowindex=\"0\"]')\n                expect(isElementPresent).to.be.false",
              "err": {},
              "uuid": "751b92f6-1b76-4315-bafa-9e763ab02f4c",
              "parentUUID": "42ec4f63-5557-431f-b41c-254bb3338509",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1fc9149-a26e-471e-a29a-3d2cac7bc302",
            "4c07b773-bc1a-4fb7-ab77-ae62674e6278",
            "751b92f6-1b76-4315-bafa-9e763ab02f4c"
          ],
          "failures": [
            "118148d2-b784-4307-9b60-61a197cd4513"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15442,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "autoOpen": "true"
      },
      "version": "6.0.1"
    }
  }
}